{"version":3,"sources":["utils.js","components/Products.js","components/Filter.js","components/Basket.js","App.js","serviceWorker.js","index.js"],"names":["num","Number","toFixed","toLocaleString","Products","products","handleAddToCart","list","map","item","className","key","id","title","src","sku","alt","description","utils","price","onClick","e","Filter","count","sort","size","handleSortChange","handleSizeChange","value","onChange","Basket","cartItems","handleRemoveFromCart","length","reduce","a","b","alert","App","props","listProducts","setState","state","filteredProducts","filter","availableSizes","indexOf","toUpperCase","productAlreadyInCart","forEach","cp","push","localStorage","setItem","JSON","stringify","console","log","target","fetch","then","res","json","catch","err","data","getItem","this","parse","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ca90ea57.chunk.js","sourcesContent":["export default {\r\n    formatCurrency: function(num){\r\n        return '$' + Number(num.toFixed(1)).toLocaleString() + ' ';\r\n    }\r\n}","import React from 'react';\nimport utils from '../utils';\nconst Products = ({products, handleAddToCart}) =>{\n    const list = products.map(item=>{\n        return (\n        <div className=\"col-lg-4 mb-3 text-center\" key={item.id}>\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    {item.title}\n                </div>\n                <div className=\"card-body\">\n                <img src={`products/${item.sku}_2.jpg`} alt={item.title} />\n\n                    <p>{item.description}\n                    </p>\n                    {utils.formatCurrency(item.price)}\n                   \n                </div>\n                <div className=\"card-footer \">\n                    <button className=\"btn btn-primary\" onClick={(e)=>handleAddToCart(e, item)}>Add To Cart</button>\n                </div>\n            </div>\n        </div>\n        )\n    })\n    return(\n        <div className=\"row\">\n             {list}\n        </div>\n    )\n}\n\nexport default Products;\n","import React from 'react';\r\n\r\nconst Filter = ({count, sort, size, handleSortChange, handleSizeChange}) =>{\r\n    return(\r\n        <div className=\"d-flex justify-content-between mb-3 flex-wrap\">\r\n            <div className=\"mb-3 mb-lg-0\">\r\n                {`${count} products found.`}\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <div>\r\n                    <div className=\"form-inline mr-3\">\r\n                        <label className=\"mr-2\">Order by</label>\r\n                        <select className=\"form-control\" value={sort} onChange={handleSortChange}>\r\n                            <option value=\"\">Select</option>\r\n                            <option value=\"lowestprice\">Lowest to highest</option>\r\n                            <option value=\"highestprice\">Highest to lowest</option>\r\n                        </select>\r\n                        </div>\r\n                    </div>\r\n                <div>\r\n                    <div className=\"form-inline\">\r\n                        <label className=\"mr-2\"> Filter Size</label>\r\n                        <select className=\"form-control\" value={size} onChange={handleSizeChange}>\r\n                            <option value=\"\">ALL</option>\r\n                            <option value=\"x\">XS</option>\r\n                            <option value=\"s\">S</option>\r\n                            <option value=\"m\">M</option>\r\n                            <option value=\"l\">L</option>\r\n                            <option value=\"xl\">XL</option>\r\n                            <option value=\"xxl\">XXL</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Filter","import React from 'react';\r\nimport utils from '../utils';\r\n\r\nconst Basket =({cartItems, handleRemoveFromCart})=>{\r\n    return(\r\n        <div>\r\n            {cartItems.length === 0\r\n                ? <div className=\"alert alert-danger\">Basket is empty </div>:\r\n                <div>You have {cartItems.length} items in the basket. <hr /></div>\r\n            }\r\n            {\r\n            cartItems.length > 0 &&\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                    {\r\n                        cartItems.map(item=>\r\n                            <li className=\"list-group-item\" key={item.id}>\r\n                                <h6 className=\"card-title\">{item.title}</h6>\r\n                                <div className=\"d-flex justify-content-between  align-items-center\">\r\n                                {item.count} * {utils.formatCurrency(item.price)}\r\n                                <button className=\"btn btn-danger\" onClick={ (e)=>handleRemoveFromCart(e, item)}>X</button>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                    <li className=\"list-group-item\" ><b>Total: {utils.formatCurrency(cartItems.reduce((a,b)=>(a+b.price*b.count),0))}</b> </li>\r\n                  \r\n               \r\n                </ul>\r\n             \r\n                <button onClick={() => alert('Todo: Implement checkout page.')} className=\"btn btn-success btn-block my-3\">checkout</button>\r\n\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Basket;","import React, { Component } from 'react';\nimport Products from  './components/Products';\nimport Filter from  './components/Filter';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Basket from './components/Basket';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      products:[],\n      filteredProducts: [],\n      cartItems:[],\n      size:'',\n      sort:'lowestprice'\n    }\n  }\n\n  componentDidMount(){\n\n    fetch('http://localhost:9000/products')\n    .then(res => {\n      return res.json()\n    })\n    .catch(err=>{\n      console.log(err)\n      fetch(\"db.json\")\n      .then(res => res.json())\n      .then(data => data.products)\n    })\n    .then(data=>{\n      console.log(data)\n      this.setState({ products: data });\n      this.listProducts();\n\n    });\n\n    \n    if (localStorage.getItem(\"cartItems\")) {\n      this.setState({\n        cartItems: JSON.parse(localStorage.getItem(\"cartItems\"))\n      });\n    }\n    \n\n  }\n  listProducts = () =>{\n      this.setState(state=>{\n        if(state.sort ===\"lowestprice\"){\n            state.products.sort((a,b) => (a.price > b.price ? 1 : -1))\n        }\n        else if(state.sort ===\"highestprice\"){\n          state.products.sort((a,b) => (a.price < b.price  ?   1 : -1))\n        }\n        else{\n          state.products.sort((a, b) => (a.id > b.id ? 1 : -1));\n        }\n        if(state.size !== \"\"){\n          return{\n            filteredProducts: state.products.filter(a=>{\n                return a.availableSizes.indexOf(state.size.toUpperCase()) >= 0\n            })\n          }\n        }\n       \n        return{\n          filteredProducts: state.products\n        }\n      });\n\n  }\n  handleAddToCart = (e, item) =>{\n    const cartItems = this.state.cartItems;\n    let productAlreadyInCart = false\n\n    cartItems.forEach(cp=>{\n      if(cp.id === item.id){\n        cp.count += 1;\n        productAlreadyInCart = true\n      }\n    })\n    if(!productAlreadyInCart){\n      cartItems.push({...item, count:1})\n    }\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems))\n\n    this.setState({\n      cartItems : cartItems\n    })\n  }\n  handleRemoveFromCart = (e, item) =>{\n    const cartItems = this.state.cartItems.filter(a=>{\n      return a.id !== item.id;\n    });\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems))\n    this.setState({cartItems: cartItems})\n  }\n  handleSortChange =  (e) => {\n    console.log(e.target.value)\n    this.setState({ sort:e.target.value })\n    this.listProducts();\n  }\n  handleSizeChange =  (e) => {\n    console.log(e.target.value)\n    this.setState({ size:e.target.value })\n    this.listProducts();\n  }\n  render(){\n    return(\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <div className=\"navbar-brand\">Shopping Cart</div>\n        </nav>\n        <div className=\"container-fluid\">\n        <div className=\"row pt-3\">\n          \n          <div className=\"col-lg-9 order-2 order-lg-1\">\n            <Filter \n            count={this.state.filteredProducts.length}  \n            sort={this.state.sort} \n            size={this.state.size} \n            handleSortChange={this.handleSortChange}\n            handleSizeChange={this.handleSizeChange}\n            />\n            <Products products={this.state.filteredProducts} handleAddToCart={this.handleAddToCart}/>\n          </div>\n          <div className=\"col-lg-3 order-1 order-lg-2\">\n              <h5 className=\"mb-4\">Your Shopping Cart</h5>\n              <Basket cartItems={this.state.cartItems} handleRemoveFromCart={this.handleRemoveFromCart} />\n          </div>\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}